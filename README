Search within binary files for a pattern and output the found offsets (similar to grep). Can search using a smaller binary file, or using a hexidecimal string.

Syntax:
searchbin.py -p PATTERN [FILE [FILE...]]
searchbin.py -f FILE [FILE [FILE...]]


Examples:
python searchbin.py -p "CCDD??FF" myfile.exe
Searches for the hexidecimal pattern "CCDD??FF" in myfile.exe, where ?? can be any byte value.

python searchbin.py -f pattern.bin myfile.exe
Takes the binary file pattern.bin, and searches for an exact match within myfile.exe.

python searchbin.py -h
Shows all optional program arguments.


+Minimum Py2.7 (argparse library)
+Features: no compiling, less code, search in files of unlimited size, similar in usage to grep
+keywords: hex hexidecimal binary like grep search seek find fast

An argument -f or -p is required. The -p argument accepts a hexidecimal pattern string and allows for missing characters, such as 'FF??FF'. When using -f argument, the pattern file will be read as a binary file (not hex strings). If no search file is specified, searchbin.py will read from standard input. The minimum memory required is about 3 times the size of the binary pattern. Increasing the buffer-size will increase program search speed for large search files. All size arguments are read in decimal format, '-s 1024' = start searching after 1kilobyte. Reported finds are 0-based offset.


Please report bugs to  cowpie2000 @ hot mail dot com (remove spaces and replace dot with .)
https://github.com/Sepero/SearchBin
